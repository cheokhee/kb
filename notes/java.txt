Regex:
aString.matches("regex") -> has to match entire string

remove an element while iterating:
Iterator.remove()
java 8: coll.removeIf(i -> i.intValue() == 5);

HashMap is not thread-safe but Hashtable is thread-safe
HashMap allows one null key and null values but Hashtable doesn't allow null key or values.

jstack: show stack trace of each thread
e.g. jstack <process id of java process>

--format string
System.out.format("my name is %s, age is %03d", "cheok", 42);

double brace initialization:
original:
ArrayList<String> list = new ArrayList<String>();
list.add("A");
list.add("B");
list.add("C");
alternative:
ArrayList<String> list = new ArrayList<String>() {{
    add("A");
    add("B");
    add("C");
}};

Arrays.asList("one", "two", "three")


    public static <T> List<T> asList(T... a) {
    return new ArrayList<T>(a);
    }

deal with keys and values of map:
for (Map.Entry<K, V> entries: hashmap.entrySet()) { }

anonymous java array: inline array
void method(String[] a)
how you call: method(new String[] {"123", "456"})
alternative:
void method(String... strs) // strs is seen as an array inside the method
how you call: method(new String[] {"123", "456"}) or method("123", "456")

#print various flags about JVM
java -XX:+PrintFlagsFinal -version
OR
java -XX:+PrintFlagsFinal -version | grep -iE 'HeapSize|PermSize|ThreadStackSize'

#measure elapsed time in code
long nanos = System.nanoTime();
nanos = System.nanoTime() - nanos;
logger.logDebug("elpased time: " + nanos / 1000000 + " ms");
