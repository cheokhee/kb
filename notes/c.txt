*a++ same as *a;a++

#x is an array
x[i] same as *(x+i)

int x[5];
printf("%p\n",x); // actually prints &x[0]

declare array (2 ways): 1. pointer form: int *p 2. static form: int p[100]
address of the nth element: &p[n]

profiling: use the -pg flag, then run gprof <program> > profile-file

gdb:
break frame.c:16 // line number
s // step into
n // step over
finish // step out
c // continue
l // list
info break // show breakpoint
del 2 // delete 2nd breakpoint
enable/disable 1 // enable/disable 1st breakpoint
where // show where you are
where full // show where you are and locals


x/4xb &i // examine 4 values in memory, formatted as hex, one byte at a time
0x7fffffffdc4c: 0x01    0x00    0x00    0x00
(gdb) print &i
$1 = (int *) 0x7fffffffdc4c

gdb:
disass <function name>

Autotools:
./configure
make
make install

========================
command: gcc -xc -E -v -
output:
Using built-in specs.
COLLECT_GCC=gcc
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.9.1-16ubuntu6' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 4.9.1 (Ubuntu 4.9.1-16ubuntu6)
COLLECT_GCC_OPTIONS='-E' '-v' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/4.9/cc1 -E -quiet -v -imultiarch x86_64-linux-gnu - -mtune=generic -march=x86-64 -fstack-protector-strong -Wformat -Wformat-security
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/lib/gcc/x86_64-linux-gnu/4.9/include
 /usr/local/include
 /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.


command: gcc -xc++ -E -v -
output:
Using built-in specs.
COLLECT_GCC=gcc
Target: x86_64-linux-gnu
Configured with: ../src/configure -v --with-pkgversion='Ubuntu 4.9.1-16ubuntu6' --with-bugurl=file:///usr/share/doc/gcc-4.9/README.Bugs --enable-languages=c,c++,java,go,d,fortran,objc,obj-c++ --prefix=/usr --program-suffix=-4.9 --enable-shared --enable-linker-build-id --libexecdir=/usr/lib --without-included-gettext --enable-threads=posix --with-gxx-include-dir=/usr/include/c++/4.9 --libdir=/usr/lib --enable-nls --with-sysroot=/ --enable-clocale=gnu --enable-libstdcxx-debug --enable-libstdcxx-time=yes --enable-gnu-unique-object --disable-vtable-verify --enable-plugin --with-system-zlib --disable-browser-plugin --enable-java-awt=gtk --enable-gtk-cairo --with-java-home=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64/jre --enable-java-home --with-jvm-root-dir=/usr/lib/jvm/java-1.5.0-gcj-4.9-amd64 --with-jvm-jar-dir=/usr/lib/jvm-exports/java-1.5.0-gcj-4.9-amd64 --with-arch-directory=amd64 --with-ecj-jar=/usr/share/java/eclipse-ecj.jar --enable-objc-gc --enable-multiarch --disable-werror --with-arch-32=i686 --with-abi=m64 --with-multilib-list=m32,m64,mx32 --enable-multilib --with-tune=generic --enable-checking=release --build=x86_64-linux-gnu --host=x86_64-linux-gnu --target=x86_64-linux-gnu
Thread model: posix
gcc version 4.9.1 (Ubuntu 4.9.1-16ubuntu6)
COLLECT_GCC_OPTIONS='-E' '-v' '-mtune=generic' '-march=x86-64'
 /usr/lib/gcc/x86_64-linux-gnu/4.9/cc1plus -E -quiet -v -imultiarch x86_64-linux-gnu -D_GNU_SOURCE - -mtune=generic -march=x86-64 -fstack-protector-strong -Wformat -Wformat-security
ignoring duplicate directory "/usr/include/x86_64-linux-gnu/c++/4.9"
ignoring nonexistent directory "/usr/local/include/x86_64-linux-gnu"
ignoring nonexistent directory "/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../../x86_64-linux-gnu/include"
#include "..." search starts here:
#include <...> search starts here:
 /usr/include/c++/4.9
 /usr/include/x86_64-linux-gnu/c++/4.9
 /usr/include/c++/4.9/backward
 /usr/lib/gcc/x86_64-linux-gnu/4.9/include
 /usr/local/include
 /usr/lib/gcc/x86_64-linux-gnu/4.9/include-fixed
 /usr/include/x86_64-linux-gnu
 /usr/include
End of search list.
=======================================

when you make an assignment (set A to B), you need to know whether you are making a copy or an alias.
In C, you make a copy. but a copy of a pointer still points to the original data.
for struct, assignment makes a copy.

compare two struct : memcmp(&struct1, &struct2, sizeof(struct_name))

for array, assignment makes an alias:
int abc[] = {0,1,2};
int *copy = abc

copying an array requires memcpy

#1 constant pointer is a pointer that cannot change the address it's holding.
a constant pointer which points to a variable cannot be made to point to any other variable.
example: int * const ptr;
#2 pointer to constant. a pointer through which one cannot change the value of variable it points is
known as a pointer to constant. These type of pointers can change the address they point to but
cannot change the value kept at those address.
example: const int* ptr;
#3 Constant Pointer to a Constant
example: const int* const ptr;

difference between char *str and char str[]:
char str[] = "Hello"
tell the compiler to allocate an array on the stack and fill the array
with the string literal. mutable
vs
char *str = "hello"
str is pointing to a constant block of memory in the executable (read-only)
===
in function arguments, they are equivalent:
void foo(char *x);
void foo(char x[]);

stack frame:
|--------------------------|
| ESP                      |
| stack frame of function1 |
|                          |
| EBP                      |
| saved EBP of main        |
|--------------------------|
| return address           |
|--------------------------|
| stack frame of main      |
|--------------------------|

EIP : instruction pointer
ESP : stack pointer (to the top) (low memory)
EBP : stack base pointer (to the bottom) (high memory)
ESI : source index
EDI : destination index
EAX : accumulator
EBX : base
ECX : counter
EDX : data
